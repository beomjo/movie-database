[versions]
kotlin = "1.5.31"
coroutine = "1.5.2"
compose = "1.0.5"
lifecycle = "2.4.0"
activity_fragment = "1.4.0"
dagger = "2.39.1"
retrofit = "2.9.0"
room = "2.3.0"


[libraries]
##kotlin
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin_reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

## androidx
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.1"
appcompat = "androidx.appcompat:appcompat:1.4.0"

## compose
compose_ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose_material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose_preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose_activity = { module = "androidx.activity:activity-compose", version.ref = "activity_fragment" }
compose_navigation = "androidx.navigation:navigation-compose:2.4.0-alpha08"

## ktx
ktx_core = "androidx.core:core-ktx:1.7.0"
lifecycle_viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle_livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
activity = { module = "androidx.activity:activity-ktx", version.ref = "activity_fragment" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "activity_fragment" }

## google
material = "com.google.android.material:material:1.4.0"
gson = "com.google.code.gson:gson:2.8.9"

## OkHttp
okhttp3 = "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
okhttp3_connection = "com.squareup.okhttp3:okhttp-urlconnection:4.9.2"
okhttp3_interceptor = "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

composeCoil = "io.coil-kt:coil-compose:1.3.1"
composeViewmodel = "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
composePaging = "androidx.paging:paging-compose:1.0.0-alpha12"
paging = "androidx.paging:paging-runtime-ktx:3.0.0"
palette = "androidx.palette:palette-ktx:1.0.0"
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitMoshiConverter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
httpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:4.2.1"
moshi = "com.squareup.moshi:moshi-kotlin:1.12.0"
room = { module = "androidx.room:room-ktx", version.ref = "room" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
# ===== tests =====
composeTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeTest = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
junit = "junit:junit:4.+"
androidJunit = "androidx.test.ext:junit:1.1.3"
espresso = "androidx.test.espresso:espresso-core:3.4.0"


[bundles]
android = ["androidCore", "appcompat", "lifecycle", "material"]
compose = [
    "composeUi",
    "composeMaterial",
    "composeActivity",
    "composeNavigation",
    "composeCoil",
    "composeViewmodel"
]
retrofit = ["retrofit", "moshi", "retrofitMoshiConverter", "httpLoggingInterceptor"]
room = ["room", "roomRuntime"]
# ===== tests =====
androidTest = ["androidJunit", "espresso"]